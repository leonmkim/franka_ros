<?xml version='1.0' encoding='utf-8'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="panda">

  <xacro:arg      name="arm_id"       default="panda" /> <!-- Name of this panda -->
  <xacro:arg      name="end_effector" default=""      /> <!-- What should be mounted at the flange [hand, peg, sphere]? -->
  <xacro:arg      name="gazebo"       default="false" /> <!-- Is the robot being simulated in gazebo?" -->
  <xacro:arg      name="radius"       default="1.0"   /> <!-- How large should the sphere be in [m]? -->
  <xacro:arg      name="mu"           default="0.2"   /> <!-- What is the coefficient of friction? -->
  <xacro:arg      name="tabletop"           default="false"   /> <!-- What is the coefficient of friction? -->
  
  <xacro:property name="arm_id"       value="$(arg arm_id)" />
  <xacro:property name="end_effector"   value="$(arg end_effector)" />
  <xacro:property name="tabletop"   value="$(arg tabletop)" />

  <!-- Create a URDF for a real hardware -->
  <xacro:unless value="$(arg gazebo)">
    <xacro:include filename="$(find franka_description)/robots/panda_arm.xacro" />
    <xacro:panda_arm arm_id="${arm_id}" safety_distance="0.03"/>

    <xacro:if value="${end_effector == 'hand'}">
      <xacro:include filename="$(find franka_description)/robots/hand.xacro"/>
      <xacro:hand arm_id="${arm_id}" rpy="0 0 ${-pi/4}" connected_to="${arm_id}_link8" safety_distance="0.03"/>
    </xacro:if>

    <xacro:if value="${end_effector == 'peg'}">
      <xacro:include filename="$(find franka_description)/robots/peg.xacro"/>
      <xacro:peg ns="${arm_id}" rpy="0 0 ${-pi/4}" connected_to="${arm_id}_link8"/>
    </xacro:if>

    <xacro:if value="${end_effector == 'sphere'}">
      <xacro:include filename="$(find franka_description)/robots/sphere.xacro"/>
      <xacro:sphere_shape ns="${arm_id}" rpy="0 0 ${-pi/4}" connected_to="${arm_id}_link8" radius="$(arg radius) mu=$(arg mu) "/>
    </xacro:if>
  </xacro:unless>
  
  <!-- Separate URDF for simulation... -->
  <xacro:if value="$(arg gazebo)">

    <xacro:arg name="xyz" default="0 0 0" />
    <xacro:arg name="rpy" default="0 0 0" />

    <!-- Create a simulatable URDF -->
    <xacro:include filename="$(find franka_description)/robots/panda_gazebo.xacro" />
    <xacro:include filename="$(find franka_description)/robots/utils.xacro" />
    <xacro:include filename="$(find franka_description)/robots/tabletop.xacro" />
    

    <xacro:panda_arm arm_id="${arm_id}" />
    
    <xacro:if value="$(arg tabletop)">
        <xacro:tabletop/>
    </xacro:if>

    <xacro:if value="${end_effector == 'hand'}">
      <xacro:hand arm_id="${arm_id}" rpy="0 0 ${-pi/4}" connected_to="${arm_id}_link8" />
      <xacro:gazebo-joint joint="${arm_id}_finger_joint1" transmission="hardware_interface/EffortJointInterface" />
      <xacro:gazebo-joint joint="${arm_id}_finger_joint2" transmission="hardware_interface/EffortJointInterface" />
    </xacro:if>

    <xacro:if value="${end_effector == 'peg'}">
      <xacro:peg ns="${arm_id}" rpy="0 0 ${-pi/4}" connected_to="${arm_id}_link8" />
    </xacro:if>

    <xacro:if value="${end_effector == 'sphere'}">
      <xacro:sphere_shape ns="${arm_id}" rpy="0 0 ${-pi/4}" connected_to="${arm_id}_link8" radius="$(arg radius)" mu="$(arg mu)" />
    </xacro:if>

    <!-- Gazebo requires a joint to a link called "world" for statically mounted robots -->
    <link name="world" />
    <joint name="world_joint" type="fixed">
      <origin xyz="$(arg xyz)" rpy="$(arg rpy)" />
      <parent link="world" />
      <child  link="${arm_id}_link0" />
    </joint>


    <xacro:gazebo-joint joint="$(arg arm_id)_joint1" transmission="hardware_interface/PositionJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint2" transmission="hardware_interface/PositionJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint3" transmission="hardware_interface/PositionJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint4" transmission="hardware_interface/PositionJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint5" transmission="hardware_interface/PositionJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint6" transmission="hardware_interface/PositionJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint7" transmission="hardware_interface/PositionJointInterface" />

    <xacro:gazebo-joint joint="$(arg arm_id)_joint1" transmission="hardware_interface/VelocityJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint2" transmission="hardware_interface/VelocityJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint3" transmission="hardware_interface/VelocityJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint4" transmission="hardware_interface/VelocityJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint5" transmission="hardware_interface/VelocityJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint6" transmission="hardware_interface/VelocityJointInterface" />
    <xacro:gazebo-joint joint="$(arg arm_id)_joint7" transmission="hardware_interface/VelocityJointInterface" />

    <xacro:gazebo-joint joint="${arm_id}_joint1" transmission="hardware_interface/EffortJointInterface" />
    <xacro:gazebo-joint joint="${arm_id}_joint2" transmission="hardware_interface/EffortJointInterface" />
    <xacro:gazebo-joint joint="${arm_id}_joint3" transmission="hardware_interface/EffortJointInterface" />
    <xacro:gazebo-joint joint="${arm_id}_joint4" transmission="hardware_interface/EffortJointInterface" />
    <xacro:gazebo-joint joint="${arm_id}_joint5" transmission="hardware_interface/EffortJointInterface" />
    <xacro:gazebo-joint joint="${arm_id}_joint6" transmission="hardware_interface/EffortJointInterface" />
    <xacro:gazebo-joint joint="${arm_id}_joint7" transmission="hardware_interface/EffortJointInterface" />

    <xacro:transmission-franka-state arm_id="${arm_id}" />
    <xacro:transmission-franka-model arm_id="${arm_id}"
       root="${arm_id}_joint1"
       tip="${arm_id}_joint8"
     />

    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>${arm_id}</robotNamespace>
        <controlPeriod>0.001</controlPeriod>
        <robotSimType>franka_gazebo/FrankaHWSim</robotSimType>
      </plugin>
      <self_collide>true</self_collide>
    </gazebo>
  </xacro:if>

</robot>
